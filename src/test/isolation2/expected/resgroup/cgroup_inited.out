-- start_ignore
0: drop role r1;
DROP
0: drop role r2;
DROP
0: drop resource group g1;
DROP
0: drop resource group g2;
DROP
0: drop function round_percentage(text);
ERROR:  function round_percentage(text) does not exist
0: drop view cpu_status;
ERROR:  view "cpu_status" does not exist
0: drop view busy;
ERROR:  view "busy" does not exist
0: drop table bigtable;
ERROR:  table "bigtable" does not exist
-- end_ignore

--
-- create helper functions and views
--

create table bigtable as select i as c1, 'abc' as c2 from generate_series(1,100000) i;
CREATE 100000

-- the cpu usage limitation has an error rate about 10%,
-- and to satisfy the 0.1:0.4 rate we round the cpu rate to 9%
create function round_percentage(text) returns text as $$ select (round(rtrim($1, '%') :: double precision / 9) * 9) :: text || '%' $$ language sql;
CREATE

create view cpu_status as select g.rsgname, round_percentage(s.cpu_usage) from gp_toolkit.gp_resgroup_status s, pg_resgroup g where s.groupid=g.oid order by g.oid;
CREATE

create view busy as select count(*) from bigtable t1, bigtable t2, bigtable t3, bigtable t4, bigtable t5 where 0 = (t1.c1 + 10000)! and 0 = (t2.c1 + 10000)! and 0 = (t3.c1 + 10000)! and 0 = (t4.c1 + 10000)! and 0 = (t5.c1 + 10000)! ;
CREATE

--
-- check gpdb cgroup configuration
-- cfs_quota_us := cfs_period_us * ncores * gp_resource_group_cpu_limit
-- shares := 1024 * ncores
--

! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/cpu.cfs_quota_us) == int($(cat /sys/fs/cgroup/cpu/gpdb/cpu.cfs_period_us) * $(nproc) * $(psql -d isolation2resgrouptest -Aqtc "show gp_resource_group_cpu_limit;"))";
True


! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/cpu.shares) == 1024 * $(nproc)";
True


--
-- check default groups configuration
-- SUB/shares := TOP/shares * cpu_rate_limit
--

! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/$(psql -d isolation2resgrouptest -Aqtc "select oid from pg_resgroup where rsgname='default_group';")/cpu.shares) == int($(cat /sys/fs/cgroup/cpu/gpdb/cpu.shares) * $(psql -d isolation2resgrouptest -Aqtc "select value from pg_resgroupcapability c, pg_resgroup g where c.resgroupid=g.oid and reslimittype=2 and g.rsgname='default_group'"))";
True


! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/$(psql -d isolation2resgrouptest -Aqtc "select oid from pg_resgroup where rsgname='admin_group';")/cpu.shares) == int($(cat /sys/fs/cgroup/cpu/gpdb/cpu.shares) * $(psql -d isolation2resgrouptest -Aqtc "select value from pg_resgroupcapability c, pg_resgroup g where c.resgroupid=g.oid and reslimittype=2 and g.rsgname='admin_group'"))";
True


0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
(2 rows)

0: create resource group g1 with (cpu_rate_limit=0.1, memory_limit=0.1);
CREATE
0: create resource group g2 with (cpu_rate_limit=0.4, memory_limit=0.4);
CREATE

-- check g1 configuration
! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/$(psql -d isolation2resgrouptest -Aqtc "select oid from pg_resgroup where rsgname='g1';")/cpu.shares) == int($(cat /sys/fs/cgroup/cpu/gpdb/cpu.shares) * 0.1)";
True


-- check g2 configuration
! python -c "print $(cat /sys/fs/cgroup/cpu/gpdb/$(psql -d isolation2resgrouptest -Aqtc "select oid from pg_resgroup where rsgname='g2';")/cpu.shares) == int($(cat /sys/fs/cgroup/cpu/gpdb/cpu.shares) * 0.4)";
True


0: create role r1 resource group g1;
CREATE
0: create role r2 resource group g2;
CREATE
0: grant all on busy to r1;
GRANT
0: grant all on busy to r2;
GRANT

10: set role to r1;
SET
11: set role to r1;
SET
12: set role to r1;
SET
13: set role to r1;
SET
14: set role to r1;
SET

20: set role to r2;
SET
21: set role to r2;
SET
22: set role to r2;
SET
23: set role to r2;
SET
24: set role to r2;
SET

0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |0%              
g2           |0%              
(4 rows)

10&: select * from busy;  <waiting ...>
11&: select * from busy;  <waiting ...>
12&: select * from busy;  <waiting ...>
13&: select * from busy;  <waiting ...>
14&: select * from busy;  <waiting ...>

20&: select * from busy;  <waiting ...>
21&: select * from busy;  <waiting ...>
22&: select * from busy;  <waiting ...>
23&: select * from busy;  <waiting ...>
24&: select * from busy;  <waiting ...>

0: select pg_sleep(10);
pg_sleep
--------
        
(1 row)
0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |18%             
g2           |72%             
(4 rows)
0: select pg_sleep(1);
pg_sleep
--------
        
(1 row)
0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |18%             
g2           |72%             
(4 rows)
0: select pg_sleep(1);
pg_sleep
--------
        
(1 row)
0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |18%             
g2           |72%             
(4 rows)
0: select pg_sleep(1);
pg_sleep
--------
        
(1 row)
0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |18%             
g2           |72%             
(4 rows)
0: select pg_sleep(1);
pg_sleep
--------
        
(1 row)
0: select * from cpu_status;
rsgname      |round_percentage
-------------+----------------
default_group|0%              
admin_group  |0%              
g1           |18%             
g2           |72%             
(4 rows)

-- start_ignore
0: select pg_cancel_backend(procpid) from pg_stat_activity where current_query like 'select * from busy%';
pg_cancel_backend
-----------------
t                
t                
t                
t                
t                
t                
t                
t                
t                
t                
(10 rows)

10<:  <... completed>
ERROR:  canceling statement due to user request
11<:  <... completed>
ERROR:  canceling statement due to user request
12<:  <... completed>
ERROR:  canceling statement due to user request
13<:  <... completed>
ERROR:  canceling statement due to user request
14<:  <... completed>
ERROR:  canceling statement due to user request
20<:  <... completed>
ERROR:  canceling statement due to user request
21<:  <... completed>
ERROR:  canceling statement due to user request
22<:  <... completed>
ERROR:  canceling statement due to user request
23<:  <... completed>
ERROR:  canceling statement due to user request
24<:  <... completed>
ERROR:  canceling statement due to user request
-- end_ignore
